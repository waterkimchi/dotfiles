#: Hide mouse cursor after the specified number of seconds of the
#: mouse not being used. Set to zero to disable mouse cursor hiding.
#: Set to a negative value to hide the mouse cursor immediately when
#: typing text. Disabled by default on macOS as getting it to work
#: robustly with the ever-changing sea of bugs that is Cocoa is too
#: much effort.

mouse_hide_wait -1.0

#: The color and style for highlighting URLs on mouse-over. url_style
#: can be one of: none, straight, double, curly, dotted, dashed.

url_color #F1E0DC
url_style dashed

#: The program to open clicked URLs. The special value default will
#: first look for any URL handlers defined via the open_actions
#: <https://sw.kovidgoyal.net/kitty/open_actions/> facility and if non
#: are found, it will use the Operating System's default URL handler
#: (open on macOS and xdg-open on Linux).

open_url_with default

#: The set of URL prefixes to look for when detecting a URL under the
#: mouse cursor.

# url_prefixes file ftp ftps gemini git gopher http https irc ircs kitty mailto news sftp ssh

#: Detect URLs under the mouse. Detected URLs are highlighted with an
#: underline and the mouse cursor becomes a hand over them. Even if
#: this option is disabled, URLs are still clickable. See also the
#: underline_hyperlinks option to control how hyperlinks (as opposed
#: to plain text URLs) are displayed.

detect_urls no

#: Additional characters to be disallowed from URLs, when detecting
#: URLs under the mouse cursor. By default, all characters that are
#: legal in URLs are allowed. Additionally, newlines are allowed (but
#: stripped). This is to accommodate programs such as mutt that add
#: hard line breaks even for continued lines. \n can be added to this
#: option to disable this behavior. Special characters can be
#: specified using backslash escapes, to specify a backslash use a
#: double backslash.

# url_excluded_characters

#: When the mouse hovers over a terminal hyperlink, show the actual
#: URL that will be activated when the hyperlink is clicked.

show_hyperlink_targets no

#: Control how hyperlinks are underlined. They can either be
#: underlined on mouse hover, always (i.e. permanently underlined) or
#: never which means that kitty will not apply any underline styling
#: to hyperlinks. Uses the url_style and url_color settings for the
#: underline style. Note that reloading the config and changing this
#: value to/from always will only affect text subsequently received by
#: kitty.

underline_hyperlinks always

#: Copy to clipboard or a private buffer on select. With this set to
#: clipboard, selecting text with the mouse will cause the text to be
#: copied to clipboard. Useful on platforms such as macOS that do not
#: have the concept of primary selection. You can instead specify a
#: name such as a1 to copy to a private kitty buffer. Map a shortcut
#: with the paste_from_buffer action to paste from this private
#: buffer. For example::

#:     copy_on_select a1
#:     map shift+cmd+v paste_from_buffer a1

#: Note that copying to the clipboard is a security risk, as all
#: programs, including websites open in your browser can read the
#: contents of the system clipboard.

copy_on_select clipboard

#: A comma separated list of actions to take when pasting text into
#: the terminal. The supported paste actions are:

#: quote-urls-at-prompt:
#:     If the text being pasted is a URL and the cursor is at a shell prompt,
#:     automatically quote the URL (needs shell_integration).
#: replace-dangerous-control-codes
#:     Replace dangerous control codes from pasted text, without confirmation.
#: replace-newline
#:     Replace the newline character from pasted text, without confirmation.
#: confirm:
#:     Confirm the paste if the text to be pasted contains any terminal control codes
#:     as this can be dangerous, leading to code execution if the shell/program running
#:     in the terminal does not properly handle these.
#: confirm-if-large
#:     Confirm the paste if it is very large (larger than 16KB) as pasting
#:     large amounts of text into shells can be very slow.
#: filter:
#:     Run the filter_paste() function from the file paste-actions.py in
#:     the kitty config directory on the pasted text. The text returned by the
#:     function will be actually pasted.
#: no-op:
#:     Has no effect.

paste_actions quote-urls-at-prompt,confirm,confirm-if-large

#: Remove spaces at the end of lines when copying to clipboard. A
#: value of smart will do it when using normal selections, but not
#: rectangle selections. A value of always will always do it.

strip_trailing_spaces never

#: Characters considered part of a word when double clicking. In
#: addition to these characters any character that is marked as an
#: alphanumeric character in the Unicode database will be matched.

# select_by_word_characters @-./_~?&=%+#

#: Characters considered part of a word when extending the selection
#: forward on double clicking. In addition to these characters any
#: character that is marked as an alphanumeric character in the
#: Unicode database will be matched.

#: If empty (default) select_by_word_characters will be used for both
#: directions.

# select_by_word_characters_forward

#: The interval between successive clicks to detect double/triple
#: clicks (in seconds). Negative numbers will use the system default
#: instead, if available, or fallback to 0.5.

click_interval -1

#: Set the active window to the window under the mouse when moving the
#: mouse around. On macOS, this will also cause the OS Window under
#: the mouse to be focused automatically when the mouse enters it.

focus_follows_mouse yes

#: The shape of the mouse pointer when the program running in the
#: terminal grabs the mouse.

pointer_shape_when_grabbed arrow

#: The default shape of the mouse pointer.

default_pointer_shape beam

#: The default shape of the mouse pointer when dragging across text.

pointer_shape_when_dragging beam

##: Mouse actions
include shortcuts/mouse_actions.conf

##### mouse.conf end

# vim:fileencoding=utf-8:foldmethod=marker
